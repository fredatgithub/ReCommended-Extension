using System;
using System.Numerics;

namespace Test
{
    // classes

    internal class Class1 { }

    internal class |Class2|(0) : IEquatable<Class2> // suggest to implement IEqualityOperators<Class2, Class2, bool>
    {
        public bool Equals(Class2 other) => throw new NotImplementedException();
    }

    internal class |Class2WithOperators|(1) : IEquatable<Class2WithOperators> // suggest to declare IEqualityOperators<Class2WithOperators, Class2WithOperators, bool> (implementation available)
    {
        public bool Equals(Class2WithOperators other) => throw new NotImplementedException();

        public static bool operator ==(Class2WithOperators left, Class2WithOperators right) => throw new NotImplementedException();

        public static bool operator !=(Class2WithOperators left, Class2WithOperators right) => throw new NotImplementedException();
    }

    internal class Class2WithOperatorsAndInterface : IEquatable<Class2WithOperatorsAndInterface>, IEqualityOperators<Class2WithOperatorsAndInterface, Class2WithOperatorsAndInterface, bool>
    {
        public bool Equals(Class2WithOperatorsAndInterface other) => throw new NotImplementedException();

        public static bool operator ==(Class2WithOperatorsAndInterface left, Class2WithOperatorsAndInterface right) => throw new NotImplementedException();

        public static bool operator !=(Class2WithOperatorsAndInterface left, Class2WithOperatorsAndInterface right) => throw new NotImplementedException();
    }

    internal class Class3 : IEquatable<Class2>
    {
        public bool Equals(Class2 other) => throw new NotImplementedException();
    }

    internal class Class6 : Class5 { }

    // structs

    internal struct Struct1 { }

    internal struct |Struct2|(2) : IEquatable<Struct2> // suggest to implement IEqualityOperators<Struct2, Struct2, bool>
    {
        public bool Equals(Struct2 other) => throw new NotImplementedException();
    }

    internal struct |Struct2WithOperators|(3) : IEquatable<Struct2WithOperators> // suggest to declare IEqualityOperators<Struct2WithOperators, Struct2WithOperators, bool> (implementation available)
    {
        public bool Equals(Struct2WithOperators other) => throw new NotImplementedException();

        public static bool operator ==(Struct2WithOperators left, Struct2WithOperators right) => throw new NotImplementedException();

        public static bool operator !=(Struct2WithOperators left, Struct2WithOperators right) => throw new NotImplementedException();
    }

    internal struct Struct2WithOperatorsAndInterface : IEquatable<Struct2WithOperatorsAndInterface>, IEqualityOperators<Struct2WithOperatorsAndInterface, Struct2WithOperatorsAndInterface, bool>
    {
        public bool Equals(Struct2WithOperatorsAndInterface other) => throw new NotImplementedException();

        public static bool operator ==(Struct2WithOperatorsAndInterface left, Struct2WithOperatorsAndInterface right) => throw new NotImplementedException();

        public static bool operator !=(Struct2WithOperatorsAndInterface left, Struct2WithOperatorsAndInterface right) => throw new NotImplementedException();
    }

    internal class Struct3 : IEquatable<Struct2>
    {
        public bool Equals(Struct2 other) => throw new NotImplementedException();
    }

    // records

    internal record |ClassRecord1|(4); // implements IEquatable<ClassRecord1>: suggest to declare IEqualityOperators<ClassRecord1, ClassRecord1, bool> (operators available)

    internal record ClassRecord1WithOperators : IEqualityOperators<ClassRecord1WithOperators, ClassRecord1WithOperators, bool>; // implements IEquatable<ClassRecord1>

    internal record |ClassRecord2|(5) : ClassRecord1; // implements IEquatable<ClassRecord2>: suggest to declare IEqualityOperators<ClassRecord2, ClassRecord2, bool> (operators available)

    internal record struct |StructRecord1|(6); // implements IEquatable<StructRecord1>: suggest to declare IEqualityOperators<StructRecord1, StructRecord1, bool> (operators available)

    internal record struct StructRecord1WithOperators : IEqualityOperators<StructRecord1WithOperators, StructRecord1WithOperators, bool>; // implements IEquatable<StructRecord1>
}
---------------------------------------------------------
(0): ReSharper Suggestion: Implement the IEqualityOperators<Class2, Class2, bool> interface.
(1): ReSharper Suggestion: Mark the class as implementing the IEqualityOperators<Class2WithOperators, Class2WithOperators, bool> interface (operators are available).
(2): ReSharper Suggestion: Implement the IEqualityOperators<Struct2, Struct2, bool> interface.
(3): ReSharper Suggestion: Mark the struct as implementing the IEqualityOperators<Struct2WithOperators, Struct2WithOperators, bool> interface (operators are available).
(4): ReSharper Suggestion: Mark the record as implementing the IEqualityOperators<ClassRecord1, ClassRecord1, bool> interface (operators are available).
(5): ReSharper Suggestion: Mark the record as implementing the IEqualityOperators<ClassRecord2, ClassRecord2, bool> interface (operators are available).
(6): ReSharper Suggestion: Mark the record struct as implementing the IEqualityOperators<StructRecord1, StructRecord1, bool> interface (operators are available).
